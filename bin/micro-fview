#!/usr/bin/env python

import sys
import time
import argparse

import cv2

from microfview import Microfview, BlockingPlugin, PluginFinished, get_capture_object, parse_config_file

class DisplayPlugin(BlockingPlugin):

    def process_frame(self, frame_time, current_time, frame):
        cv2.imshow('micro-fview', frame)
        ch = 0xFF & cv2.waitKey(1)
        if ch == 27:
            cv2.destroyWindow('micro-fview')
            raise PluginFinished

if __name__ == "__main__":
    import logging
    import argparse

    logging.basicConfig(level=logging.INFO)

    parser = argparse.ArgumentParser()
    parser.add_argument('capture', default='', nargs='?', type=str,
                        help='path to a video file or capture hardware device')
    parser.add_argument('--config', type=str,
                        help='path to a configuration file')
    args = parser.parse_args()

    conf = parse_config_file(args.config)

    cam = get_capture_object(args.capture, **conf['capture'])
    fview = Microfview(cam)
    fview.attach_plugin(DisplayPlugin())

    try:
        fview.start()
        while not fview.finished:
           time.sleep(0.1)
    except KeyboardInterrupt:
        pass
    finally:
        fview.stop()
